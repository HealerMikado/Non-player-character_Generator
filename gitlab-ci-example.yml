#example
variable:
  GIT_SSL_NO_VERIFY: "1"
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  #MAVEN_BIN: "/opt/apache-maven-3.5.3/bin/mvn"
    # The docker tag of the java app
  DOCKER_TAG_JAVA: docker-registry.beta.innovation.insee.eu/coding_dojo/pnj_generator_java_back
  DOCKER_TAG_JS: docker-registry.beta.innovation.insee.eu/coding_dojo/pnj_generator_java_front
  # The groupe id for marathon
  GROUP_ID: /coding-dojo-sndio

  

stages:
  - test
  - build
  - deploy


helloworld:
  stage: test

packagejs:
  stage: build
  tags:
    - shell
 ## Si aucune image n'est précisée dans le dockerfile, on peut également la préciser ici
  script:
    - mvn $MAVEN_CLI_OPTS test
    ##TODO:CONSTRUIRE IMAGE DOCKER
    ##TODO:ENVOYER L'IMAGE AU NEXUS

packageJava:
  stage: build
  tags:
    - shell
  script:
 ## Si aucune image n'est précisée dans le dockerfile, on peut également la préciser ici
    - mvn $MAVEN_CLI_OPTS package ##build le package
    ##TODO:CONSTRUIRE IMAGE DOCKER
    ##TODO:ENVOYER L'IMAGE AU NEXUS
  ##artifacts : si les war/jar ne sont pas dans le dockerfile
    expire_in: 1 day


## deploiement sur l'orchestrateur marathon
deploy:
    stage: deploy
    tags:
      - shell
    script: 
      - "cat marathon-group.json | envsubst | curl -d@- -H \"Content-Type: application/json\" -X PUT http://deploy.alpha.innovation.insee.eu/v2/groups/$GROUP_ID?force=true"

